var Point = Class.extend({	init: function (paramsJSON) {		this.canvas = paramsJSON.canvas;		this.count = paramsJSON.count;		this.places = paramsJSON.places;		this.distToTravel = paramsJSON.distToTravel;		this.x = this.canvas.width / 2;		this.y = this.canvas.height / 2;		if (this.count >= 100 && this.count < 200) {			this.x = this.canvas.width / 2 - this.places[1][0] * this.distToTravel;			this.y = this.canvas.height / 2 - this.places[1][1] * this.distToTravel;		} else if (this.count >= 200 && this.count < 300) {			this.x = this.canvas.width / 2 - this.places[2][0] * this.distToTravel;			this.y = this.canvas.height / 2 - this.places[2][1] * this.distToTravel;		} else if (this.count >= 300 && this.count < 400) {			this.x = this.canvas.width / 2 - this.places[3][0] * this.distToTravel;			this.y = this.canvas.height / 2 - this.places[3][1] * this.distToTravel;		} else if (this.count >= 400 && this.count < 500) {			this.x = this.canvas.width / 2 - this.places[4][0] * this.distToTravel;			this.y = this.canvas.height / 2 - this.places[4][1] * this.distToTravel;		}		this.direction = this.getRandom(1, 5);		this.distanceMoved = 0;		this.life = this.getRandom(1, 3);		this.speed = 10;		this.path = [];		this.maxPath = 15;	},	dying: function () {		this.life -= 0.01;	},	move: function () {		if (this.distanceMoved + this.speed > this.distToTravel) {			this.distanceMoved = this.distToTravel;		} else {			this.distanceMoved += this.speed;		}		switch (this.direction) {			case 1:				//moving up				this.y -= this.speed;				break;			case 2:				//moving right				this.x += this.speed;				break;			case 3:				//moving down				this.y += this.speed;				break;			case 4:				//moving left				this.x -= this.speed;				break		}		if (this.distanceMoved >= this.distToTravel) {			this.direction = this.getRandom(1, 5);			this.distanceMoved = 0;		}	},	updatePath: function () {		if (this.path.length > this.maxPath) {			this.path.splice(this.path.length - 1, 1);			this.path.unshift({				x: this.x,				y: this.y			});		} else {			this.path.unshift({				x: this.x,				y: this.y			});		}	},	getRandom: function (min, max) {		return Math.floor(Math.random() * (max - min)) + min;	}});